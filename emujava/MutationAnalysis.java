/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package emujava;

import java.awt.Graphics;
import java.awt.Color;
/**
 *
 * @author jBillu
 * 
 * @version 1.0 November 2, 2013
 * 
*/
public class MutationAnalysis extends javax.swing.JPanel {

    public static boolean PAINT = false;
    
    /**
     * Creates new form MutationAnalysis
     */
    public MutationAnalysis() {
        initComponents();
        this.repaint();
    } //END MutationAnalysis() METHOD

    public void paint( Graphics g ) {
        super.paint( g );
        if( MutationAnalysis.PAINT ) {

            g.setColor( Color.BLACK );
            g.drawString( "Killed", 495, 42 );
            g.drawString( "Suspicious", 585, 42 );
            g.drawString( "Equivalent", 685, 42 );
            
            g.setColor( Color.GREEN );
            g.fillRect( 460, 30, 30, 15 );
            g.setColor( Color.BLUE );
            g.fillRect( 550, 30, 30, 15 );
            g.setColor( Color.RED );
            g.fillRect( 650, 30, 30, 15 );
    
            int killed = EMConstants.ACHIEVED_TARGETS.size();
            int suspicious = 0;
            if( EMConstants.GEN_TYPE.equals( "Proposed Work" ) || EMConstants.GEN_TYPE.equals( "Random" ) ) {
                suspicious = Integer.parseInt( EMController.create().getMutationAnalysis().jLabel12.getText() );
            } //END if STATEMENT
            int equivalent = Integer.parseInt( EMController.create().getMutationAnalysis().jLabel13.getText() );;
            int sum = equivalent + suspicious + killed;
            
            int angle = 0;
            int angle2 = ( int )( ( killed * 360 ) / sum );
            g.setColor( Color.GREEN );
            g.fillArc( 510, 75, 160, 170, angle, angle2 );
            
            angle = angle + angle2;
            angle2 = ( int )( ( suspicious * 360 ) / sum );
            g.setColor( Color.BLUE );
            g.fillArc( 510, 75, 160, 170, angle, angle2 );
            
            angle = angle + angle2;
            angle2 = 360 - angle;
            g.setColor( Color.RED );
            g.fillArc( 510, 75, 160, 170, angle, angle2 );
        } //END if STATEMENT
    } //END paint() MEHTOD
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "   Mutation Analysis   ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 102)));
        setPreferredSize(new java.awt.Dimension(404, 302));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Number of Classes");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 115, -1, -1));

        jLabel2.setText("Applied Operators");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 135, -1, -1));

        jLabel3.setText("Number of Mutants");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 155, -1, -1));

        jLabel4.setText("Killed Mutants");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 175, -1, -1));

        jLabel5.setText("Suspicious Mutants");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 195, -1, -1));

        jLabel6.setText("Alive Mutants");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 215, -1, -1));

        jLabel7.setText("Mutation Score");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 235, -1, -1));

        jLabel8.setText("0");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 115, -1, -1));

        jLabel9.setText("0");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 135, -1, -1));

        jLabel10.setText("0");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 155, -1, -1));

        jLabel11.setText("0");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 175, -1, -1));

        jLabel12.setText("0");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 195, -1, -1));

        jLabel13.setText("0");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 215, -1, -1));

        jLabel14.setText("0%");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 235, -1, -1));

        jLabel15.setText("The below figures represent mutation analysis. It shows how many operators");
        jLabel15.setPreferredSize(new java.awt.Dimension(380, 14));
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 25, -1, -1));

        jLabel16.setText("were applied on the classes under test, total number of generated, killed, ");
        jLabel16.setPreferredSize(new java.awt.Dimension(380, 14));
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 45, -1, -1));

        jLabel17.setText("suspicious, equivalent mutants, and the mutation score. Finally it shows ");
        jLabel17.setPreferredSize(new java.awt.Dimension(380, 14));
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 65, -1, -1));

        jLabel18.setText("the comparison among these mutants with the help of a pie chart.");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 85, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel10;
    public static javax.swing.JLabel jLabel11;
    public static javax.swing.JLabel jLabel12;
    public static javax.swing.JLabel jLabel13;
    public static javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public static javax.swing.JLabel jLabel8;
    public static javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
